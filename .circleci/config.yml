version: 2.1 # use CircleCI 2.1

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10.17.0

jobs: # a collection of steps
  build-and-test:
    <<: *defaults  
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "backend/package.json" }}-{{ checksum "frontend/package.json" }}
      - run:
          name: install frontend
          working_directory: frontend
          command: npm install
      - run:
          name: build frontend
          working_directory: frontend
          command: npm run build
      - run:
          name: test frontend
          working_directory: frontend
          command: npm run test
      - store_artifacts: # special step to save test results as as artifact
          path: frontend/coverage
          destination: frontend-coverage
      - run:
          name: install backend
          working_directory: backend
          command: npm install
      - run:
          name: build backend
          working_directory: backend
          command: npm run webpack-prod
      - run:
          name: create .vsix
          working_directory: backend
          command: npx vsce package .
      - run:
          name: test backend 
          working_directory: backend
          command: npm run test
      - store_artifacts: # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: backend/reports/coverage/lcov-report
          destination: backend-coverage
      - save_cache:
          paths:
            - backend/node_modules
            - frontend/node_modules
          key: dependency-cache-{{ checksum "backend/package.json" }}-{{ checksum "frontend/package.json" }}
      - persist_to_workspace:
          root: backend
          paths: 
           # https://golang.org/pkg/path/filepath/#Match
            - yeoman-ui-*
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results.xml
  
  deploy:
    docker:
      - image: circleci/golang:1.13
    steps:
      - attach_workspace:
          at: ./dist
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./dist/ 

workflows:
  version: 2
  test-deploy:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
